import requests
from bs4 import BeautifulSoup
import re, argparse

def normalize_plugin_version(version):
    # Remove parentheses and their contents if present
    version = re.sub(r'\(.*?\)', '', version).strip()
    # Remove characters after the version number
    version = re.sub(r'(?<=\d)\..*$', '', version).strip()
    return version

def get_latest_version(plugin_name):
    url = f"https://plugins.jenkins.io/{plugin_name}/"
    response = requests.get(url)
    if response.status_code == 200:
        soup = BeautifulSoup(response.text, 'html.parser')
        version_tag = soup.find('h5', string=lambda t: t and "Version:" in t)
        if version_tag:
            return version_tag.text.replace("Version:", "").strip()
    return None

def compare_versions(file_path):
    with open(file_path, 'r') as file:
        for line in file:
            plugin_info = line.strip().split()
            if len(plugin_info) >= 3:
                plugin_name = plugin_info[0]
                installed_version = normalize_plugin_version(plugin_info[-1])
                latest_version = get_latest_version(plugin_name)
                if latest_version:
                    latest_version = normalize_plugin_version(latest_version)
                    if installed_version != latest_version:
                        print(f"{plugin_name}: Installed version {plugin_info[-1]}, Latest version {latest_version}")
                    else:
                        print(f"{plugin_name}: Up to date")
                else:
                    print(f"Failed to fetch latest version for {plugin_name}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Compare Jenkins plugin versions.')
    parser.add_argument('-f', "--file", metavar='FILE_PATH', type=str, help='Path to the file containing plugin information')
    args = parser.parse_args()
    file_path = "jenkins_plugins.txt"  # Update with your file path
    compare_versions(file_path)